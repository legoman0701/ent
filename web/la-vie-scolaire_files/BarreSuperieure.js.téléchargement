/*
 * Copyright © FYLAB and the Conseil Régional d'Île-de-France, 2009
 * This file is part of L'Interface Libre et Interactive de l'Enseignement (Lilie).
 *
 * Lilie is free software. You can redistribute it and/or modify since
 * you respect the terms of either (at least one of the both license) :
 * - under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * - the CeCILL-C as published by CeCILL-C; either version 1 of the
 * License, or any later version
 *
 * There are special exceptions to the terms and conditions of the
 * licenses as they are applied to this software. View the full text of
 * the exception in file LICENSE.txt in the directory of this software
 * distribution.
 *
 * Lilie is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Licenses for more details.
 *
 * You should have received a copy of the GNU General Public License
 * and the CeCILL-C along with Lilie. If not, see :
 *  <http://www.gnu.org/licenses/> and
 *  <http://www.cecill.info/licences.fr.html>.
 */

/**
 * Construit la barre au dessu de menu d'éliot qui contient :
 * - Le breadCrumbs et potentiellement l'aide en ligne
 * @param jsonBreadCrumbs les données de breadcrumbs
 * @param jsonAideEnLigne les donnée de l'aide en ligne
 *
 * @author bahj
 */

Ext.ns('eliot.barreSuperieure');

eliot.barreSuperieure.aucuneAide = {
  titre : undefined,
  texte : undefined
};

eliot.barreSuperieure.creeButtons = function(jsonAideEnLigne, style) {

  var buttons = [];

  if (eliot.barreSuperieure.buttonsConfig != null) {
    for (var i = 0; i < eliot.barreSuperieure.buttonsConfig.length; i++) {
      var conf = eliot.barreSuperieure.buttonsConfig[i];
      buttons.push(  new Ext.Button({
        icon : conf.icon,
        url : conf.url,
        style: style != null ? style : 'float: left; padding-right: 5px; margin-top: 2px;',
        handler : function(btn) {
          window.location.href = btn.url;
        },
        template: new Ext.Template(
            '<table id="{4}" cellspacing="0" class="x-btn {3}">',
            '<tbody class="x-btn-small x-btn-icon-small-left">',
            '<tr>',
            '<td class="x-btn-mc">',
            '<em class="{2}" unselectable="on" style="background-color:#F3F6FB;">',
            '<button class="x-btn-text {2}" type="{0}"></button>',
            '</em>',
            '</td>',
            '</tr>',
            '</tbody>',
            '</table>'
        ).compile()
      }));
    }
  }

  var aideEnLigneButtons = eliot.aideEnLigne.creeBoutonAideEnLigne(
    jsonAideEnLigne,
    style != null ? style : 'display: inline-block;margin-top:2px;'
  );

  if (aideEnLigneButtons.length != 0) {
    buttons.push(aideEnLigneButtons);
  }

  return buttons;
};

eliot.barreSuperieure.creeBarreSuperieureButtons = function(jsonAideEnLigne) {

  var buttons = eliot.barreSuperieure.creeButtons(jsonAideEnLigne);

  return new Ext.Panel({
    unstyled: true,
    style : 'float:right',
    width: 20 * buttons.length,
    items: buttons
  });
};

eliot.barreSuperieure.creeBarreSuperieure = function(jsonBreadCrumbs, jsonAideEnLigne) {

  function addItemsBarreSuperieure(jsonBreadCrumbs, jsonAideEnLigne) {
    return {
      layout: 'column',
      unstyled: true,
      items: [
        {
          html : addItemsBreadCrumbs(jsonBreadCrumbs),
          columnWidth: 1,
          unstyled: true
        },
        eliot.barreSuperieure.creeBarreSuperieureButtons(jsonAideEnLigne)
      ]
    };
  }

  function addItemsBreadCrumbs(jsonBreadCrumbs) {
    var items = [];
    var htmlText = '';
    for (var i = 0; i < jsonBreadCrumbs.length; i++) {
      var item = jsonBreadCrumbs[i];

      // breadcrumbs clickable
      if (item.url) {
        htmlText += '<a id="breadcrumb' + i + '" href="' + item.url + '">' + item.label + '</a>';
      }
      // breadcrumbs non clickable
      else {
        if (item.fonctionJavaScript) {
          var chaine = '<a id="breadcrumb' + i + '" href="#" onClick="eval(' + item.fonctionJavaScript + '());">' + item.label + '</a>';
          htmlText += chaine;
        } else {
          htmlText += '<span id="breadcrumb' + i + '"> ' + item.label + '</span>';
        }
      }
      if (i < jsonBreadCrumbs.length - 1) {
        htmlText += getSeparateur();
      }
    }

    return htmlText;
  }

  function getSeparateur() {
    return '<span class="portal-bc-separator">&nbsp;</span>';
  }

  return new Ext.Panel({
    id: 'breadcrumbs',
    baseCls: 'portal-breadcrumbs',
    border: true,
    layout: 'fit',
    frame: false,
    items: [
      {
        unstyled: true,
        items: addItemsBarreSuperieure(jsonBreadCrumbs, jsonAideEnLigne)
      }
    ]
  });
};

